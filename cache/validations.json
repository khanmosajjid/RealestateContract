{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "3337dfcb66f7c5919e0d0b3a33a70eae98a92841eb0f95abc9c4059090ad4af7",
          "withoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c",
          "linkedWithoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RealEstateContract",
            "src": "contracts/RealEstate.sol:342"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "b3d281ae88a877b8f2931a88730db13056976a5b3014b87a8c880321c14bcfc6",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "9f6af6f3d7571712878dd17882c8c2a544c64d78760ab1ba25f293fa895c3f9d",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "3337dfcb66f7c5919e0d0b3a33a70eae98a92841eb0f95abc9c4059090ad4af7",
          "withoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c",
          "linkedWithoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RealEstateContract",
            "src": "contracts/RealEstate.sol:342"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "b3d281ae88a877b8f2931a88730db13056976a5b3014b87a8c880321c14bcfc6",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "9f6af6f3d7571712878dd17882c8c2a544c64d78760ab1ba25f293fa895c3f9d",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "3337dfcb66f7c5919e0d0b3a33a70eae98a92841eb0f95abc9c4059090ad4af7",
          "withoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c",
          "linkedWithoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RealEstateContract",
            "src": "contracts/RealEstate.sol:342"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "b3d281ae88a877b8f2931a88730db13056976a5b3014b87a8c880321c14bcfc6",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "9f6af6f3d7571712878dd17882c8c2a544c64d78760ab1ba25f293fa895c3f9d",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "3337dfcb66f7c5919e0d0b3a33a70eae98a92841eb0f95abc9c4059090ad4af7",
          "withoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c",
          "linkedWithoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RealEstateContract",
            "src": "contracts/RealEstate.sol:342"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "b3d281ae88a877b8f2931a88730db13056976a5b3014b87a8c880321c14bcfc6",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "9f6af6f3d7571712878dd17882c8c2a544c64d78760ab1ba25f293fa895c3f9d",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "3337dfcb66f7c5919e0d0b3a33a70eae98a92841eb0f95abc9c4059090ad4af7",
          "withoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c",
          "linkedWithoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RealEstateContract",
            "src": "contracts/RealEstate.sol:342"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "b3d281ae88a877b8f2931a88730db13056976a5b3014b87a8c880321c14bcfc6",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "9f6af6f3d7571712878dd17882c8c2a544c64d78760ab1ba25f293fa895c3f9d",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "3337dfcb66f7c5919e0d0b3a33a70eae98a92841eb0f95abc9c4059090ad4af7",
          "withoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c",
          "linkedWithoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RealEstateContract",
            "src": "contracts/RealEstate.sol:342"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "b3d281ae88a877b8f2931a88730db13056976a5b3014b87a8c880321c14bcfc6",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "9f6af6f3d7571712878dd17882c8c2a544c64d78760ab1ba25f293fa895c3f9d",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "3337dfcb66f7c5919e0d0b3a33a70eae98a92841eb0f95abc9c4059090ad4af7",
          "withoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c",
          "linkedWithoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RealEstateContract",
            "src": "contracts/RealEstate.sol:342"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "b3d281ae88a877b8f2931a88730db13056976a5b3014b87a8c880321c14bcfc6",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "9f6af6f3d7571712878dd17882c8c2a544c64d78760ab1ba25f293fa895c3f9d",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "3337dfcb66f7c5919e0d0b3a33a70eae98a92841eb0f95abc9c4059090ad4af7",
          "withoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c",
          "linkedWithoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RealEstateContract",
            "src": "contracts/RealEstate.sol:342"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "b3d281ae88a877b8f2931a88730db13056976a5b3014b87a8c880321c14bcfc6",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "9f6af6f3d7571712878dd17882c8c2a544c64d78760ab1ba25f293fa895c3f9d",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "3337dfcb66f7c5919e0d0b3a33a70eae98a92841eb0f95abc9c4059090ad4af7",
          "withoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c",
          "linkedWithoutMetadata": "60e71f20381e9401ec787cf85344a083d08892fc3944e6ae93d660a02027db2c"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RealEstateContract",
            "src": "contracts/RealEstate.sol:342"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "b3d281ae88a877b8f2931a88730db13056976a5b3014b87a8c880321c14bcfc6",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "9f6af6f3d7571712878dd17882c8c2a544c64d78760ab1ba25f293fa895c3f9d",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateToken": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "595fedf09bb5424cbd1ec3db27377a2b558f8d19ca9f6c9a2988f55cc65d3679",
          "withoutMetadata": "d6f82097e8ce79167c42a141eea8a5bf4b05a7d9acff5adae410c4805f2feea1",
          "linkedWithoutMetadata": "d6f82097e8ce79167c42a141eea8a5bf4b05a7d9acff5adae410c4805f2feea1"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RealEstateToken",
            "src": "contracts/RealEstate.sol:342"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateToken",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateToken",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateToken",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateToken",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateToken",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateToken",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateToken",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateToken",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateToken",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateToken",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateToken.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateToken.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateToken.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateToken.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateToken.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateToken.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "332f380a060796fe6e807d5d6b785035965e86d40ddaa6e2df81abaa0749c386",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "f4acdc7754c488d24df6eb7599264f2cb1ff87865bf5e9285a83cdf7d7c3edd4",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "4c2fb329db8a989c4ae5748db47e7207f091b7164c4b44df09f9367f24cb10c8",
          "withoutMetadata": "5b5a245e46155c07117c0671e3c25b49f69f497b646779912d45ac5d49d74a74",
          "linkedWithoutMetadata": "5b5a245e46155c07117c0671e3c25b49f69f497b646779912d45ac5d49d74a74"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "initialize()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "a8bc1af30ddaa47228bbff3f34fe22e97bf425a07792c405f5dee2a1febf1cd2",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "234f38da71f559e106c24ff07047648a016857f43346572eb122f5911b48bcdc",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "4c2fb329db8a989c4ae5748db47e7207f091b7164c4b44df09f9367f24cb10c8",
          "withoutMetadata": "5b5a245e46155c07117c0671e3c25b49f69f497b646779912d45ac5d49d74a74",
          "linkedWithoutMetadata": "5b5a245e46155c07117c0671e3c25b49f69f497b646779912d45ac5d49d74a74"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "initialize()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "a8bc1af30ddaa47228bbff3f34fe22e97bf425a07792c405f5dee2a1febf1cd2",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "234f38da71f559e106c24ff07047648a016857f43346572eb122f5911b48bcdc",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "4c2fb329db8a989c4ae5748db47e7207f091b7164c4b44df09f9367f24cb10c8",
          "withoutMetadata": "5b5a245e46155c07117c0671e3c25b49f69f497b646779912d45ac5d49d74a74",
          "linkedWithoutMetadata": "5b5a245e46155c07117c0671e3c25b49f69f497b646779912d45ac5d49d74a74"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "initialize()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "a8bc1af30ddaa47228bbff3f34fe22e97bf425a07792c405f5dee2a1febf1cd2",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "234f38da71f559e106c24ff07047648a016857f43346572eb122f5911b48bcdc",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "4c2fb329db8a989c4ae5748db47e7207f091b7164c4b44df09f9367f24cb10c8",
          "withoutMetadata": "5b5a245e46155c07117c0671e3c25b49f69f497b646779912d45ac5d49d74a74",
          "linkedWithoutMetadata": "5b5a245e46155c07117c0671e3c25b49f69f497b646779912d45ac5d49d74a74"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "initialize()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "a8bc1af30ddaa47228bbff3f34fe22e97bf425a07792c405f5dee2a1febf1cd2",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "234f38da71f559e106c24ff07047648a016857f43346572eb122f5911b48bcdc",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "0cb0e5ef6941a80bf0f9417e0c8e8d4f53d3f29185a029286a67abf1a4e9d427",
          "withoutMetadata": "187cc6fdaf8269f5e920ffdb80563e0ba34104ae3cf48fe5162c0d130d704e88",
          "linkedWithoutMetadata": "187cc6fdaf8269f5e920ffdb80563e0ba34104ae3cf48fe5162c0d130d704e88"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "initialize()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "93e8a80ea5cfa55c2eb9f8b4037e1d45fa6e5e8f119ab4cd5a5328ceddf72266",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "db55d711bbc4a6c9cbe005b48bf6867e970a66c5c38515be34cfb59211153ddc",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "be5bcd509031d00bafe5100d690deb32b15ff25f24fe7877f7ca700e8e3ec8f7",
          "withoutMetadata": "af5597dded1688654ca945e1fce1c8c3810dcd513a2b4486dcbbae51a035fb5a",
          "linkedWithoutMetadata": "af5597dded1688654ca945e1fce1c8c3810dcd513a2b4486dcbbae51a035fb5a"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "initialize()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "a822e50104fa34d1af7cf48415e7f4e7ccef4252b44492898c3ceb1e199e5570",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "ef0bf384c58b1c578cc1940f7943c7b71f36c220550be2d5206f717505ba0b83",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "21c1865f8e84b263abb6bdb7f2ddb7105736e496bc69368409647a11306da6b0",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "f05bc75a112d02acec46ed8b003c0869bf140e9cebaa7038f43dacb968f663bf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "be5bcd509031d00bafe5100d690deb32b15ff25f24fe7877f7ca700e8e3ec8f7",
          "withoutMetadata": "af5597dded1688654ca945e1fce1c8c3810dcd513a2b4486dcbbae51a035fb5a",
          "linkedWithoutMetadata": "af5597dded1688654ca945e1fce1c8c3810dcd513a2b4486dcbbae51a035fb5a"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "initialize()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "a822e50104fa34d1af7cf48415e7f4e7ccef4252b44492898c3ceb1e199e5570",
          "withoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303",
          "linkedWithoutMetadata": "089bb7721043e20c9bc576e68b3e8a05f63e24e03d1c38203b0a6f3694996303"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "ef0bf384c58b1c578cc1940f7943c7b71f36c220550be2d5206f717505ba0b83",
          "withoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff",
          "linkedWithoutMetadata": "b6ab832198837420734f55bea24d78a38f7fdb9bfc01d501a6ebe55c60ff93ff"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "700a4bc76cb30d315d28ee835be0097048679b19807b95fd707b7a0d6e6d5b12",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "b43abc07ea34d66866937d71a225f932d85a375d473055f228d57eece5255634",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:256",
        "version": {
          "withMetadata": "49de13c8965110ef530e0c2c212e645fdbaebcbf7306082426464fcbfd2a6e7b",
          "withoutMetadata": "2ef3f8d249f36fb2c8d5ff19ab0bf6fec5bb90b5e61002812481b1e97ac036a5",
          "linkedWithoutMetadata": "2ef3f8d249f36fb2c8d5ff19ab0bf6fec5bb90b5e61002812481b1e97ac036a5"
        },
        "inherit": [
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "initialize()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2017_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:292"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:293"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2038_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:294"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:295"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:298"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:299"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:300"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2027_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:302"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:303"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:304"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1623": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2038_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2017_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2027_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2038_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2017_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1623",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2027_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:7",
        "version": {
          "withMetadata": "592821bae2f3dc36ad97d43f3d684fb9d8919c430c5a288a180f394e97090d18",
          "withoutMetadata": "2c61bd59141b3bf404033ea3b1d55d63f88ac6d76b13d0560a5e92fd2d287de5",
          "linkedWithoutMetadata": "2c61bd59141b3bf404033ea3b1d55d63f88ac6d76b13d0560a5e92fd2d287de5"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:21"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:126"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:8"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:9"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:10"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:130",
        "version": {
          "withMetadata": "d6e4bacad19ffe065916017bed2e0ba29ea92863f003f99c4f48eca5ecf4446a",
          "withoutMetadata": "7132168c2f32bbdffdeb47531d77216897f9864bc57f6049edda67633e959b3f",
          "linkedWithoutMetadata": "7132168c2f32bbdffdeb47531d77216897f9864bc57f6049edda67633e959b3f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:148"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:133"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)807",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:134"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:135"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1643_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)807": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1643_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1643_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "contracts/RealEstate.sol:Context": {
        "src": "contracts/RealEstate.sol:270",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:ERC20": {
        "src": "contracts/RealEstate.sol:627",
        "version": {
          "withMetadata": "0dcf4c84a515c6d6fedfd1e319b3310fe2d8f5ae7e6cfeaf713e5212a9dfde26",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "contracts/RealEstate.sol:IERC20Metadata",
          "contracts/RealEstate.sol:IERC20",
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RealEstate.sol:643"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:628"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:630"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:632"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:634"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:635"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:IERC20": {
        "src": "contracts/RealEstate.sol:483",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:IERC20Metadata": {
        "src": "contracts/RealEstate.sol:576",
        "inherit": [
          "contracts/RealEstate.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:Ownable": {
        "src": "contracts/RealEstate.sol:403",
        "inherit": [
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/RealEstate.sol:414"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/RealEstate.sol:404"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:Pausable": {
        "src": "contracts/RealEstate.sol:295",
        "inherit": [
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/RealEstate.sol:311"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/RealEstate.sol:306"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:1272",
        "version": {
          "withMetadata": "b2ff913d84e1a9c910e3e5bd7ae6ce8555eda8d540f7600c1a623d728aba6fe4",
          "withoutMetadata": "188df66d1dad6af45f59f7b9c1d098c90862da00891969692dbb9118493748f2",
          "linkedWithoutMetadata": "188df66d1dad6af45f59f7b9c1d098c90862da00891969692dbb9118493748f2"
        },
        "inherit": [
          "contracts/RealEstate.sol:Pausable",
          "contracts/RealEstate.sol:Ownable",
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [
          "contracts/RealEstate.sol:SafeMath"
        ],
        "methods": [
          "initialize()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:1142"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/RealEstate.sol:404"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/RealEstate.sol:306"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2000_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1308"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1309"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2021_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1310"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1311"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1314"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1315"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1316"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2010_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1318"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1319"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1320"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1606": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2021_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2000_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2010_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2021_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2000_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1606",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2010_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SafeMath": {
        "src": "contracts/RealEstate.sol:21",
        "version": {
          "withMetadata": "ee87bd503c7126c6e09823895d40c076cc33762b225f9b6c1ff0d7ead0be487a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:1023",
        "version": {
          "withMetadata": "1fcff22c55f644b77de3d87d01c82e2339274f38e3b1ab87567501215514c127",
          "withoutMetadata": "2c61bd59141b3bf404033ea3b1d55d63f88ac6d76b13d0560a5e92fd2d287de5",
          "linkedWithoutMetadata": "2c61bd59141b3bf404033ea3b1d55d63f88ac6d76b13d0560a5e92fd2d287de5"
        },
        "inherit": [
          "contracts/RealEstate.sol:Ownable",
          "contracts/RealEstate.sol:ERC20",
          "contracts/RealEstate.sol:IERC20Metadata",
          "contracts/RealEstate.sol:IERC20",
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:1037"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:1142"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:628"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:630"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:632"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:634"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:635"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/RealEstate.sol:404"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:1024"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:1025"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:1026"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:1027"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:1146",
        "version": {
          "withMetadata": "403ccd6ff36718ab98b1ed9b5300c7f9989b57da3e8fbe5e3715178f17f73fd9",
          "withoutMetadata": "7132168c2f32bbdffdeb47531d77216897f9864bc57f6049edda67633e959b3f",
          "linkedWithoutMetadata": "7132168c2f32bbdffdeb47531d77216897f9864bc57f6049edda67633e959b3f"
        },
        "inherit": [
          "contracts/RealEstate.sol:Ownable",
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [
          "contracts/RealEstate.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:1164"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/RealEstate.sol:404"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)1232",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:1149"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)1232",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:1150"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:1151"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1626_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:1159"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)1232": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1626_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1626_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "contracts/RealEstate.sol:Context": {
        "src": "contracts/RealEstate.sol:270",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:ERC20": {
        "src": "contracts/RealEstate.sol:627",
        "version": {
          "withMetadata": "c3615c97d615ca7ff50830a66a5838523d455735be2976ed1d8fe803f8487bdf",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "contracts/RealEstate.sol:IERC20Metadata",
          "contracts/RealEstate.sol:IERC20",
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RealEstate.sol:643"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:628"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:630"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:632"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:634"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:635"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:IERC20": {
        "src": "contracts/RealEstate.sol:483",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:IERC20Metadata": {
        "src": "contracts/RealEstate.sol:576",
        "inherit": [
          "contracts/RealEstate.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:Ownable": {
        "src": "contracts/RealEstate.sol:403",
        "inherit": [
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/RealEstate.sol:414"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/RealEstate.sol:404"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:Pausable": {
        "src": "contracts/RealEstate.sol:295",
        "inherit": [
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/RealEstate.sol:311"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/RealEstate.sol:306"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:1272",
        "version": {
          "withMetadata": "390df531c20a6c0ee11c735514e0bfea5fab5a34cab3d7dfeb1f4e8562a6dd77",
          "withoutMetadata": "9d584c90c2ced6c269c40f3ac159d56e7b5b4b6a109dfaa12f3597f8d26c242e",
          "linkedWithoutMetadata": "9d584c90c2ced6c269c40f3ac159d56e7b5b4b6a109dfaa12f3597f8d26c242e"
        },
        "inherit": [
          "contracts/RealEstate.sol:Pausable",
          "contracts/RealEstate.sol:Ownable",
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [
          "contracts/RealEstate.sol:SafeMath"
        ],
        "methods": [
          "initialize()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:1142"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/RealEstate.sol:404"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/RealEstate.sol:306"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2000_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1308"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1309"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2021_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1310"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1311"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1314"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1315"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1316"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2010_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1318"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1319"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1320"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1606": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2021_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2000_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2010_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2021_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2000_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1606",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2010_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SafeMath": {
        "src": "contracts/RealEstate.sol:21",
        "version": {
          "withMetadata": "665ed82ace4f470e9c289bfa86e8dd6e052cabe5a29b850aa6d20b60d63028ed",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:1023",
        "version": {
          "withMetadata": "53d69ac8f08e218a0fa28edbe31867c04ee249dc48d597b345f45cead78f8b1f",
          "withoutMetadata": "2c61bd59141b3bf404033ea3b1d55d63f88ac6d76b13d0560a5e92fd2d287de5",
          "linkedWithoutMetadata": "2c61bd59141b3bf404033ea3b1d55d63f88ac6d76b13d0560a5e92fd2d287de5"
        },
        "inherit": [
          "contracts/RealEstate.sol:Ownable",
          "contracts/RealEstate.sol:ERC20",
          "contracts/RealEstate.sol:IERC20Metadata",
          "contracts/RealEstate.sol:IERC20",
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:1037"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:1142"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:628"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:630"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:632"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:634"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:635"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/RealEstate.sol:404"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:1024"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:1025"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:1026"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:1027"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:1146",
        "version": {
          "withMetadata": "2a78f03d7d6f6ad1a87967cf5415eaddc2fbfa649e5fab6dd86ee9032d29f5dc",
          "withoutMetadata": "7132168c2f32bbdffdeb47531d77216897f9864bc57f6049edda67633e959b3f",
          "linkedWithoutMetadata": "7132168c2f32bbdffdeb47531d77216897f9864bc57f6049edda67633e959b3f"
        },
        "inherit": [
          "contracts/RealEstate.sol:Ownable",
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [
          "contracts/RealEstate.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:1164"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/RealEstate.sol:404"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)1232",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:1149"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)1232",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:1150"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:1151"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1626_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:1159"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)1232": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1626_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1626_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "contracts/RealEstate.sol:Context": {
        "src": "contracts/RealEstate.sol:270",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:ERC20": {
        "src": "contracts/RealEstate.sol:627",
        "version": {
          "withMetadata": "3d93157397115f79fbe7817fed5769760fdfaf5ca08a5be5994ab2fed66114eb",
          "withoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569",
          "linkedWithoutMetadata": "a92681274947382be0406b99a11a62ccccc6f412fcb3a354d51624c87dc00569"
        },
        "inherit": [
          "contracts/RealEstate.sol:IERC20Metadata",
          "contracts/RealEstate.sol:IERC20",
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RealEstate.sol:643"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:628"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:630"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:632"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:634"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:635"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:IERC20": {
        "src": "contracts/RealEstate.sol:483",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:IERC20Metadata": {
        "src": "contracts/RealEstate.sol:576",
        "inherit": [
          "contracts/RealEstate.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:Ownable": {
        "src": "contracts/RealEstate.sol:403",
        "inherit": [
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/RealEstate.sol:414"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/RealEstate.sol:404"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:Pausable": {
        "src": "contracts/RealEstate.sol:295",
        "inherit": [
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/RealEstate.sol:311"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/RealEstate.sol:306"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:RealEstateContract": {
        "src": "contracts/RealEstate.sol:1272",
        "version": {
          "withMetadata": "04125da70eaa49fdb4d5bb03d0af0da4915806c2569264322cf5834a5b9ebe47",
          "withoutMetadata": "65090461ce131eae0bc4c4efeefd8b756dec1fb50626b23a202f9f5bd7c87aba",
          "linkedWithoutMetadata": "65090461ce131eae0bc4c4efeefd8b756dec1fb50626b23a202f9f5bd7c87aba"
        },
        "inherit": [
          "contracts/RealEstate.sol:Pausable",
          "contracts/RealEstate.sol:Ownable",
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [
          "contracts/RealEstate.sol:SafeMath"
        ],
        "methods": [
          "()",
          "createPropertyToken(string,uint256,uint256,string,string,address)",
          "listPropertyForSale(uint256,uint256)",
          "removeFromListing(uint256)",
          "purchaseTokensAndEscrow(uint256,uint256)",
          "releaseEscrow(uint256)",
          "createStakingPool(uint256,address,uint256)",
          "stakePropertyTokens(uint256,uint256)",
          "pause()",
          "unpause()",
          "createProposal(string)",
          "voteOnProposal(uint256)",
          "executeProposal(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "destroyPropertyToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RealEstateContract",
            "src": "contracts/RealEstate.sol:1358"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:1142"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/RealEstate.sol:404"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/RealEstate.sol:306"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Property)2000_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1308"
            },
            {
              "label": "propertyCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1309"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Escrow)2021_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1310"
            },
            {
              "label": "escrowCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1311"
            },
            {
              "label": "stakedBalances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1314"
            },
            {
              "label": "stakingStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1315"
            },
            {
              "label": "rewardPercent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1316"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Proposal)2010_storage)",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1318"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1319"
            },
            {
              "label": "votingDuration",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "RealEstateContract",
              "src": "contracts/RealEstate.sol:1320"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleToken)1606": {
              "label": "contract SimpleToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Escrow)2021_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Escrow)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)2000_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Property)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proposal)2010_storage)": {
              "label": "mapping(uint256 => struct RealEstateContract.Proposal)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Escrow)2021_storage": {
              "label": "struct RealEstateContract.Escrow",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ethAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Property)2000_storage": {
              "label": "struct RealEstateContract.Property",
              "members": [
                {
                  "label": "propertyAddress",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "token",
                  "type": "t_contract(SimpleToken)1606",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingPool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proposal)2010_storage": {
              "label": "struct RealEstateContract.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voters",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SafeMath": {
        "src": "contracts/RealEstate.sol:21",
        "version": {
          "withMetadata": "474c19009861705ce6c37b5bca3af3859abf897fbc49b89bda09b63ad323b3f6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:SimpleToken": {
        "src": "contracts/RealEstate.sol:1023",
        "version": {
          "withMetadata": "fd6ffebd6f0ed858cb63070c59b166e6c272dd30c7bb871bc78e200a678fb25a",
          "withoutMetadata": "2c61bd59141b3bf404033ea3b1d55d63f88ac6d76b13d0560a5e92fd2d287de5",
          "linkedWithoutMetadata": "2c61bd59141b3bf404033ea3b1d55d63f88ac6d76b13d0560a5e92fd2d287de5"
        },
        "inherit": [
          "contracts/RealEstate.sol:Ownable",
          "contracts/RealEstate.sol:ERC20",
          "contracts/RealEstate.sol:IERC20Metadata",
          "contracts/RealEstate.sol:IERC20",
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "setNewManager(address)",
          "totalVested()",
          "vestedBalanceOf(address)",
          "vestingStart(address)",
          "vestTokens(address,uint256,uint256)",
          "claimVestedTokens()",
          "mint(address,uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)",
          "selfDestruct(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/RealEstate.sol:1037"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/RealEstate.sol:1142"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:628"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:630"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:632"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:634"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RealEstate.sol:635"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/RealEstate.sol:404"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:1024"
            },
            {
              "label": "_vestedBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:1025"
            },
            {
              "label": "_vestingStart",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:1026"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SimpleToken",
              "src": "contracts/RealEstate.sol:1027"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "contracts/RealEstate.sol:StakingPool": {
        "src": "contracts/RealEstate.sol:1146",
        "version": {
          "withMetadata": "ce6087003510d22267b2c8acc05bf0fdf469e58f52017c5043ec5a5a5afd7584",
          "withoutMetadata": "7132168c2f32bbdffdeb47531d77216897f9864bc57f6049edda67633e959b3f",
          "linkedWithoutMetadata": "7132168c2f32bbdffdeb47531d77216897f9864bc57f6049edda67633e959b3f"
        },
        "inherit": [
          "contracts/RealEstate.sol:Ownable",
          "contracts/RealEstate.sol:Context"
        ],
        "libraries": [
          "contracts/RealEstate.sol:SafeMath"
        ],
        "methods": [
          "(address,address,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "setRewardPerToken(uint256)",
          "withdrawExcessEth(address)",
          "withdrawExcessToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingPool",
            "src": "contracts/RealEstate.sol:1164"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/RealEstate.sol:404"
            },
            {
              "label": "propertyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ERC20)1232",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:1149"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ERC20)1232",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:1150"
            },
            {
              "label": "rewardPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:1151"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(StakerInfo)1626_storage)",
              "contract": "StakingPool",
              "src": "contracts/RealEstate.sol:1159"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20)1232": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakerInfo)1626_storage)": {
              "label": "mapping(address => struct StakingPool.StakerInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(StakerInfo)1626_storage": {
              "label": "struct StakingPool.StakerInfo",
              "members": [
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQX.sol:EQXToken": {
        "src": "contracts/EQX.sol:7",
        "version": {
          "withMetadata": "5d02ef28945006bbe6325bc5bae7b328d8f103ea96bad093fc7dcca383f89121",
          "withoutMetadata": "7f0bddbf63fefb6fdbffa3adceef6e936f619559a800c387b48acbc4a5ef8244",
          "linkedWithoutMetadata": "7f0bddbf63fefb6fdbffa3adceef6e936f619559a800c387b48acbc4a5ef8244"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "updateAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:11"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:14"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQX.sol:EQXToken": {
        "src": "contracts/EQX.sol:7",
        "version": {
          "withMetadata": "5d02ef28945006bbe6325bc5bae7b328d8f103ea96bad093fc7dcca383f89121",
          "withoutMetadata": "7f0bddbf63fefb6fdbffa3adceef6e936f619559a800c387b48acbc4a5ef8244",
          "linkedWithoutMetadata": "7f0bddbf63fefb6fdbffa3adceef6e936f619559a800c387b48acbc4a5ef8244"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "updateAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:11"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:14"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQX.sol:EQXToken": {
        "src": "contracts/EQX.sol:7",
        "version": {
          "withMetadata": "3b40b66c34eb73333e3d82aa28d2a4cf063d01a68e86425f30c1dcbada11d9b0",
          "withoutMetadata": "e2651767da2629642d2a6635d430bce65f9f6561f6945950819628873966473f",
          "linkedWithoutMetadata": "e2651767da2629642d2a6635d430bce65f9f6561f6945950819628873966473f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "updateAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:11"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:14"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQX.sol:EQXToken": {
        "src": "contracts/EQX.sol:7",
        "version": {
          "withMetadata": "3b40b66c34eb73333e3d82aa28d2a4cf063d01a68e86425f30c1dcbada11d9b0",
          "withoutMetadata": "e2651767da2629642d2a6635d430bce65f9f6561f6945950819628873966473f",
          "linkedWithoutMetadata": "e2651767da2629642d2a6635d430bce65f9f6561f6945950819628873966473f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "updateAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:11"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:14"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQXV1.sol:EQXTokenV1": {
        "src": "contracts/EQXV1.sol:7",
        "version": {
          "withMetadata": "23fc720b3ac952d51e35dbd91587bca9a3ef9d3c86aff294398235608f172307",
          "withoutMetadata": "fe1e87d2dedd42dcfa6b33ed08a90c577076d6a5bb3c6dfc28f77edcef1b092d",
          "linkedWithoutMetadata": "fe1e87d2dedd42dcfa6b33ed08a90c577076d6a5bb3c6dfc28f77edcef1b092d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "excludeFromTax(address)",
          "includeInTax(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:11"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:14"
            },
            {
              "label": "isExcludedFromTax",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:15"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQXV1.sol:EQXTokenV1": {
        "src": "contracts/EQXV1.sol:7",
        "version": {
          "withMetadata": "23fc720b3ac952d51e35dbd91587bca9a3ef9d3c86aff294398235608f172307",
          "withoutMetadata": "fe1e87d2dedd42dcfa6b33ed08a90c577076d6a5bb3c6dfc28f77edcef1b092d",
          "linkedWithoutMetadata": "fe1e87d2dedd42dcfa6b33ed08a90c577076d6a5bb3c6dfc28f77edcef1b092d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "excludeFromTax(address)",
          "includeInTax(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:11"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:14"
            },
            {
              "label": "isExcludedFromTax",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:15"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "EQXTokenV1",
              "src": "contracts/EQXV1.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQX.sol:EQXToken": {
        "src": "contracts/EQX.sol:7",
        "version": {
          "withMetadata": "a1b620a739a264336a48b5431143c0b962b02f3ddda50429f78948d8c04c356c",
          "withoutMetadata": "e111bfd845285852a3f5de04956c5e1a73386b2e48e661338611a6aba2809abd",
          "linkedWithoutMetadata": "e111bfd845285852a3f5de04956c5e1a73386b2e48e661338611a6aba2809abd"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "excludeFromTax(address)",
          "includeInTax(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "updateAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:11"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:14"
            },
            {
              "label": "isExcludedFromTax",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:15"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQX.sol:EQXToken": {
        "src": "contracts/EQX.sol:7",
        "version": {
          "withMetadata": "a1b620a739a264336a48b5431143c0b962b02f3ddda50429f78948d8c04c356c",
          "withoutMetadata": "e111bfd845285852a3f5de04956c5e1a73386b2e48e661338611a6aba2809abd",
          "linkedWithoutMetadata": "e111bfd845285852a3f5de04956c5e1a73386b2e48e661338611a6aba2809abd"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "excludeFromTax(address)",
          "includeInTax(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "updateAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:11"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:14"
            },
            {
              "label": "isExcludedFromTax",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:15"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQX.sol:EQXToken": {
        "src": "contracts/EQX.sol:7",
        "version": {
          "withMetadata": "4a4740514017d82aa7346b07a9a0d7052c0bb6c5c60d329015aed90b24f70c6e",
          "withoutMetadata": "51561e66327c1266bdac3888b231700e0334745a3319f1db50cccaa630d9b020",
          "linkedWithoutMetadata": "51561e66327c1266bdac3888b231700e0334745a3319f1db50cccaa630d9b020"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "excludeFromTax(address)",
          "includeInTax(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "updateAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:11"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:14"
            },
            {
              "label": "isExcludedFromTax",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:15"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQX.sol:EQXToken": {
        "src": "contracts/EQX.sol:7",
        "version": {
          "withMetadata": "4a4740514017d82aa7346b07a9a0d7052c0bb6c5c60d329015aed90b24f70c6e",
          "withoutMetadata": "51561e66327c1266bdac3888b231700e0334745a3319f1db50cccaa630d9b020",
          "linkedWithoutMetadata": "51561e66327c1266bdac3888b231700e0334745a3319f1db50cccaa630d9b020"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "excludeFromTax(address)",
          "includeInTax(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "updateAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:11"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:14"
            },
            {
              "label": "isExcludedFromTax",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:15"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQX.sol:EQXToken": {
        "src": "contracts/EQX.sol:7",
        "version": {
          "withMetadata": "47b5da539a8bd59c21a3e3a09d3fc804711added59f5be8bd8e2ec82fb80eead",
          "withoutMetadata": "acd849a8cf5247b8df09ceee9abd30100e3025333ec8499f8edaa470341fabde",
          "linkedWithoutMetadata": "acd849a8cf5247b8df09ceee9abd30100e3025333ec8499f8edaa470341fabde"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "excludeFromTax(address)",
          "includeInTax(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "updateAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:11"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:14"
            },
            {
              "label": "isExcludedFromTax",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:15"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQX.sol:EQXToken": {
        "src": "contracts/EQX.sol:7",
        "version": {
          "withMetadata": "47b5da539a8bd59c21a3e3a09d3fc804711added59f5be8bd8e2ec82fb80eead",
          "withoutMetadata": "acd849a8cf5247b8df09ceee9abd30100e3025333ec8499f8edaa470341fabde",
          "linkedWithoutMetadata": "acd849a8cf5247b8df09ceee9abd30100e3025333ec8499f8edaa470341fabde"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "excludeFromTax(address)",
          "includeInTax(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "updateAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:11"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:14"
            },
            {
              "label": "isExcludedFromTax",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:15"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "EQXToken",
              "src": "contracts/EQX.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d99e4459ebe727195ec84ac37fff8e0dbe75109cfa6d6e5df2ca25308016ec90",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.18"
      },
      "contracts/EQX.sol:Token": {
        "src": "contracts/EQX.sol:7",
        "version": {
          "withMetadata": "c8b3307c4601e110f2c0dd2e0119e57383b42a306d3e32e593f08e4485a1243d",
          "withoutMetadata": "371836b2bdb5b57012fae9e36d32f3a1439e092b06631eb5096c2259629dbb55",
          "linkedWithoutMetadata": "371836b2bdb5b57012fae9e36d32f3a1439e092b06631eb5096c2259629dbb55"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,uint256)",
          "transfer(address,uint256)",
          "redistributeTax()",
          "excludeFromTax(address)",
          "includeInTax(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "Token",
              "src": "contracts/EQX.sol:8"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Token",
              "src": "contracts/EQX.sol:9"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Token",
              "src": "contracts/EQX.sol:10"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Token",
              "src": "contracts/EQX.sol:11"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Token",
              "src": "contracts/EQX.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Token",
              "src": "contracts/EQX.sol:14"
            },
            {
              "label": "isExcludedFromTax",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Token",
              "src": "contracts/EQX.sol:15"
            },
            {
              "label": "taxPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Token",
              "src": "contracts/EQX.sol:19"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Token",
              "src": "contracts/EQX.sol:20"
            },
            {
              "label": "tokenHolders",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Token",
              "src": "contracts/EQX.sol:21"
            },
            {
              "label": "tokenHolderIndex",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Token",
              "src": "contracts/EQX.sol:22"
            },
            {
              "label": "totalTaxCollected",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Token",
              "src": "contracts/EQX.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.18"
      }
    }
  ]
}